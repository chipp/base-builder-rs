name: Docker

on:
  push:
    branches:
      - main

jobs:
  push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        variant: [x86_64_musl, armv7_musl, arm64_musl]
        include:
          - variant: x86_64_musl
            target: x86_64-unknown-linux-musl
            openssl_arch: linux-x86_64
            openssl_cflags:
            additional_libs:
          - variant: armv7_musl
            target: armv7-unknown-linux-musleabihf
            openssl_arch: linux-armv4
            openssl_cflags: "-march=armv7-a -mfpu=vfpv3-d16"
            additional_libs: -latomic
          - variant: arm64_musl
            target: aarch64-unknown-linux-musl
            openssl_arch: linux-aarch64
            openssl_cflags:
            additional_libs:

    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Build and push image
        run: |
          IMAGE_ID=ghcr.io/chipp/build.rust.${{ matrix.variant }}

          RUST_VERSION=$(cat Dockerfile | grep "ENV RUST_VERSION" | sed -e 's,ENV RUST_VERSION=\(.*\),\1,' | tr -d '\n')
          LAST_REVISION=$(git tag -l | grep $RUST_VERSION | sort -r | head -n 1 | sed -e 's,.*_\(.*\),\1,')
          FULL_REVISION=${RUST_VERSION}_$((LAST_REVISION+1))

          echo IMAGE_ID=$IMAGE_ID
          echo RUST_VERSION=$RUST_VERSION
          echo FULL_REVISION=$FULL_REVISION

          docker buildx build . \
             --push \
             --build-arg VARIANT="${{ matrix.variant }}" \
             --build-arg RUST_TARGET="${{ matrix.target }}" \
             --build-arg OPENSSL_ARCH="${{ matrix.openssl_arch }}" \
             --build-arg OPENSSL_CFLAGS="${{ matrix.openssl_cflags }}" \
             --build-arg ADDITIONAL_LIBS="${{ matrix.additional_libs }}" \
             --label "org.opencontainers.image.source=https://github.com/${{ github.repository }}" \
             --platform linux/amd64,linux/arm64 \
             --tag $IMAGE_ID:$RUST_VERSION \
             --tag $IMAGE_ID:$FULL_REVISION \
             --tag $IMAGE_ID:latest \
             --cache-from=type=registry,ref=$IMAGE_ID:cache \
             --cache-to=type=registry,ref=$IMAGE_ID:cache,mode=max

      - name: Create a tag
        run: |
          RUST_VERSION=$(cat Dockerfile | grep "ENV RUST_VERSION" | sed -e 's,ENV RUST_VERSION=\(.*\),\1,' | tr -d '\n')
          LAST_REVISION=$(git tag -l | grep $RUST_VERSION | sort -r | head -n 1 | sed -e 's,.*_\(.*\),\1,')
          FULL_REVISION=${RUST_VERSION}_$((LAST_REVISION+1))

          git tag $(FULL_REVISION) HEAD
          git push origin $(FULL_REVISION)
