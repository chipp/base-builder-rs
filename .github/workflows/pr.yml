name: Test

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        variant: [x86_64_musl, armv7_musl, arm64_musl]
        include:
          - variant: x86_64_musl
            target: x86_64-unknown-linux-musl
            openssl_arch: linux-x86_64
          - variant: armv7_musl
            target: armv7-unknown-linux-musleabihf
            openssl_arch: linux-armv4
            openssl_cflags: "-march=armv7-a -mfpu=vfpv3-d16"
            additional_libs: -latomic
          - variant: arm64_musl
            target: aarch64-unknown-linux-musl
            openssl_arch: linux-aarch64

    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo ${{ secrets.CR_PAT }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Test
        run: |
          IMAGE_ID=ghcr.io/chipp/build.rust.${{ matrix.variant }}

          docker buildx build . \
            --output type=oci,tar=false,dest=local \
            --cache-from=type=gha,scope=${{ matrix.variant }}-amd64 \
            --cache-to=type=gha,scope=${{ matrix.variant }}-amd64,mode=max \
            --build-arg VARIANT="${{ matrix.variant }}" \
            --build-arg RUST_TARGET="${{ matrix.target }}" \
            --build-arg OPENSSL_ARCH="${{ matrix.openssl_arch }}" \
            --build-arg OPENSSL_CFLAGS="${{ matrix.openssl_cflags }}" \
            --build-arg ADDITIONAL_LIBS="${{ matrix.additional_libs }}" \
            --tag $IMAGE_ID:test

          docker buildx build validate \
            --load \
            --build-context base-builder-rs=oci-layout://local:test \
            --no-cache \
            --tag $IMAGE_ID:validate
